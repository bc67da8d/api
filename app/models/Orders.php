<?php
/**
 * This file is part of the Lackky API.
 *
 * (c) Lackky Team <hello@lackky.com>
 *
 * For the full copyright and license information, please view
 * the LICENSE file that was distributed with this source code.
 */
namespace Lackky\Models;
use Phalcon\Filter;
/**
 * Orders
 * 
 * @autogenerated by Phalcon Developer Tools
 * @date 2020-03-29, 10:39:37
 */
class Orders extends ModelBase
{

    /**
     *
     * @var integer
     */
    protected $id;

    /**
     *
     * @var integer
     */
    protected $userId;

    /**
     *
     * @var string
     */
    protected $name;

    /**
     * @var double
     */
    protected $price;
    /**
     *
     * @var string
     */
    protected $items;

    /**
     *
     * @var string
     */
    protected $currency;


    /**
     *
     * @var string
     */
    protected $status;

    /**
     *
     * @var integer
     */
    protected $createdAt;

    /**
     *
     * @var integer
     */
    protected $updatedAt;
    /**
     * @var string|null
     */
    protected $customerNote;

    /**
     * @return string|null
     */
    public function getCustomerNote(): ?string
    {
        return $this->customerNote;
    }

    /**
     * @return float
     */
    public function getPrice(): float
    {
        return $this->price;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field userId
     *
     * @return integer
     */
    public function getUserId()
    {
        return $this->userId;
    }

    /**
     * Returns the value of field name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Returns the value of field lineItems
     *
     * @return string
     */
    public function getItems()
    {
        return $this->items;
    }

    /**
     * Returns the value of field currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->currency;
    }

    /**
     * Returns the value of field status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * Returns the value of field createdAt
     *
     * @return integer
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Returns the value of field updatedAt
     *
     * @return integer
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
        $this->setSource("orders");
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'user_id' => 'userId',
            'name' => 'name',
            'items' => 'items',
            'price' => 'price',
            'currency' => 'currency',
            'status' => 'status',
            'customer_note' => 'customerNote',
            'created_at' => 'createdAt',
            'updated_at' => 'updatedAt'
        ];
    }

    /**
     * @inheritDoc
     */
    public function getModelFilters(): array
    {
        // TODO: Implement getModelFilters() method.
    }
}
