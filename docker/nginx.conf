worker_processes  1;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout  65;

    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;

    }

    server {
            listen [::]:443 default_server;
            listen 443 default_server;
            server_name _;

            sendfile off;
            ssl on;
             ssl_certificate /var/www/docker/nginx-selfsigned.crt;
             ssl_certificate_key /var/www/docker/nginx-selfsigned.key;
             ssl_session_timeout  5m;
               add_header Strict-Transport-Security "max-age=7200";

            root /var/www/public;
            index index.php index.html;

            try_files $uri $uri/ @rewrite;

            location @rewrite {
                rewrite ^/(.*)$ /index.php?_url=/$1;
            }

            # redirect server error pages to the static page /50x.html
            #
            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /var/lib/nginx/html;
            }

            # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
            #
            location ~ \.php$ {
                proxy_set_header X-Real-IP  $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Host $host;
                proxy_pass http://php;
            }

            location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
                expires 5d;
            }

            # deny access to . files, for security
            #
            location ~ /\. {
                log_not_found off;
                deny all;
            }
        }
}

